/**
 * OpenAPI Sample
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 */


import org.openapitools.server.api._
import org.openapitools.app.{ ResourcesApp, OpenAPIApp }
import javax.servlet.ServletContext
import org.scalatra.LifeCycle

class ScalatraBootstrap extends LifeCycle {
  implicit val openapi = new OpenAPIApp

  override def init(context: ServletContext) {
    try {
      context mount (new AbilityApi, "/api/v2/Ability/*")
      context mount (new BerryApi, "/api/v2/Berry/*")
      context mount (new BerryFirmnessApi, "/api/v2/BerryFirmness/*")
      context mount (new BerryFlavorApi, "/api/v2/BerryFlavor/*")
      context mount (new CharacteristicApi, "/api/v2/Characteristic/*")
      context mount (new ContestEffectApi, "/api/v2/ContestEffect/*")
      context mount (new ContestTypeApi, "/api/v2/ContestType/*")
      context mount (new EggGroupApi, "/api/v2/EggGroup/*")
      context mount (new EncounterConditionApi, "/api/v2/EncounterCondition/*")
      context mount (new EncounterConditionValueApi, "/api/v2/EncounterConditionValue/*")
      context mount (new EncounterMethodApi, "/api/v2/EncounterMethod/*")
      context mount (new EvolutionChainApi, "/api/v2/EvolutionChain/*")
      context mount (new EvolutionTriggerApi, "/api/v2/EvolutionTrigger/*")
      context mount (new GenderApi, "/api/v2/Gender/*")
      context mount (new GenerationApi, "/api/v2/Generation/*")
      context mount (new GrowthRateApi, "/api/v2/GrowthRate/*")
      context mount (new ItemApi, "/api/v2/Item/*")
      context mount (new ItemAttributeApi, "/api/v2/ItemAttribute/*")
      context mount (new ItemCategoryApi, "/api/v2/ItemCategory/*")
      context mount (new ItemFlingEffectApi, "/api/v2/ItemFlingEffect/*")
      context mount (new ItemPocketApi, "/api/v2/ItemPocket/*")
      context mount (new LanguageApi, "/api/v2/Language/*")
      context mount (new LocationApi, "/api/v2/Location/*")
      context mount (new LocationAreaApi, "/api/v2/LocationArea/*")
      context mount (new MachineApi, "/api/v2/Machine/*")
      context mount (new MoveApi, "/api/v2/Move/*")
      context mount (new MoveAilmentApi, "/api/v2/MoveAilment/*")
      context mount (new MoveBattleStyleApi, "/api/v2/MoveBattleStyle/*")
      context mount (new MoveCategoryApi, "/api/v2/MoveCategory/*")
      context mount (new MoveDamageClassApi, "/api/v2/MoveDamageClass/*")
      context mount (new MoveLearnMethodApi, "/api/v2/MoveLearnMethod/*")
      context mount (new MoveTargetApi, "/api/v2/MoveTarget/*")
      context mount (new NatureApi, "/api/v2/Nature/*")
      context mount (new PalParkAreaApi, "/api/v2/PalParkArea/*")
      context mount (new PokeathlonStatApi, "/api/v2/PokeathlonStat/*")
      context mount (new PokedexApi, "/api/v2/Pokedex/*")
      context mount (new PokemonApi, "/api/v2/Pokemon/*")
      context mount (new PokemonColorApi, "/api/v2/PokemonColor/*")
      context mount (new PokemonFormApi, "/api/v2/PokemonForm/*")
      context mount (new PokemonHabitatApi, "/api/v2/PokemonHabitat/*")
      context mount (new PokemonShapeApi, "/api/v2/PokemonShape/*")
      context mount (new PokemonSpeciesApi, "/api/v2/PokemonSpecies/*")
      context mount (new RegionApi, "/api/v2/Region/*")
      context mount (new StatApi, "/api/v2/Stat/*")
      context mount (new SuperContestEffectApi, "/api/v2/SuperContestEffect/*")
      context mount (new TypeApi, "/api/v2/Type/*")
      context mount (new VersionApi, "/api/v2/Version/*")
      context mount (new VersionGroupApi, "/api/v2/VersionGroup/*")
      context mount (new ResourcesApp, "/api-docs/*")
    } catch {
      case e: Throwable => e.printStackTrace()
    }
  }
}
